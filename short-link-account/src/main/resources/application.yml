server:
  port: 8001


#应用名称
spring:
  application:
    name: short-link-account
  #数据库配置
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:13306/short_link_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
#    username: root
#    password: ${password}

  #服务注册发现
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        username: nacos
        password: nacos
# 整合邮件
  mail:
    host: smtp.qq.com #发送邮件的服务器
    username: ${qq.email}
    password: ${qq.shouquanma}
    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true
    default-encoding: utf-8
  # redis配置
  redis:
    database: 0
    host: localhost
    port: 16379
    timeout: 5000
    connect-timeout: 5000
    password: ${password}
    # redis连接池配置
    lettuce:
      pool:
        max-active: 200 # 连接池最大连接数
        max-idle: 10 # 连接池中的最大空闲连接
        min-idle: 2 # 连接池中的最小空闲连接
        max-wait: 10000 # 连接池最大阻塞等待时间（使用负值表示没有限制）

  # 数据源 ds0 第一个数据库
  shardingsphere:
    datasource:
      names: ds0
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:13306/short_link_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        username: root
        password: ${password}
    rules:
      sharding:
        tables:
          traffic:
            actual-data-nodes: ds0.traffic_$->{0..1}
            table-strategy:
              standard:
                sharding-column: account_no
                sharding-algorithm-name: traffic-inline
        sharding-algorithms:
          traffic-inline:
            type: INLINE
            props:
              algorithm-expression: traffic_$->{account_no % 2}
    props:
      sql-show: true

#配置plus打印sql日志
#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
# minio 配置
minio:
  bucket-name: ${bucket_name}
  url: ${minio_url}
  access-key: ${minio_access_key}
  secret-key: ${minio_secret_key}
